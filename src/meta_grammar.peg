grammar Canopy.MetaGrammar

grammar                   <-  __* grammar_name
                              rules:(__* grammar_rule)+ __*
                              <Grammar>

grammar_name              <-  `grammar` ":"? __+ object_identifier

grammar_rule              <-  identifier assignment parsing_expression <GrammarRule>

assignment                <-  __+ "<-" __+

parsing_expression        <-  choice_expression / choice_part

parenthesised_expression  <-  "(" __* parsing_expression __* ")" %paren_expr

choice_expression         <-  first_part:choice_part
                              rest:(__+ "/" __+ expression:choice_part)+
                              <Choice>

choice_part               <-  (action_expression / sequence_expression / sequence_part)
                              (__+ type_tag)?
                              %choice_part

action_expression         <-  actionable_expression __+ action_tag %action

actionable_expression     <-  sequence_expression
                           /  repeated_atom
                           /  terminal_node
                           /  "(" __* actionable_expression __* ")" %paren_expr

action_tag                <-  "%" identifier

type_tag                  <-  "<" object_identifier ">"

sequence_expression       <-  first_part:sequence_part
                              rest:(__+ expression:sequence_part)+
                              %sequence

sequence_part             <-  mute? label? expression:(maybe_atom / repeated_atom / atom) %sequence_part

maybe_atom                <-  atom "?" %maybe

repeated_atom             <-  atom quantifier:("*" / "+") %repeat

atom                      <-  parenthesised_expression
                           /  predicated_atom
                           /  reference_expression
                           /  terminal_node

terminal_node             <-  string_expression
                           /  ci_string_expression
                           /  char_class_expression
                           /  any_char_expression

predicated_atom           <-  predicate:("&" / "!") atom %predicate

reference_expression      <-  identifier !assignment %reference

string_expression         <-  '"' ("\\" . / [^"])* '"' %string
                           /  "'" ("\\" . / [^'])* "'" %string

ci_string_expression      <-  "`" ("\\" . / [^`])* "`" %ci_string

any_char_expression       <-  "." %any_char

char_class_expression     <-  "[" "^"? ("\\" . / [^\]])+ "]" %char_class

label                     <-  identifier ":"

mute                      <-  "@"

object_identifier         <-  identifier ("." identifier)*

identifier                <-  [a-zA-Z_] [a-zA-Z0-9_]*

__                        <-  [\s] / comment

comment                   <-  "#" [^\n]*
