{ "name"            : "canopy"
, "description"     : "PEG parser compiler for JavaScript"
, "homepage"        : "http://canopy.jcoglan.com"
, "author"          : "James Coglan <jcoglan@gmail.com> (http://jcoglan.com/)"
, "keywords"        : ["parser", "compiler", "peg"]

, "version"         : "0.2.0"
, "engines"         : {"node": ">=0.4.0"}
, "main"            : "./lib/canopy.js"
, "bin"             : {"canopy": "./bin/canopy"}
, "preferGlobal"    : true
, "devDependencies" : {"benchmark": "", "jstest": "", "pegjs": "", "wake": ""}

, "scripts"         : { "build"   : "wake && ./bin/canopy source/canopy/meta_grammar.peg"
                      , "canopy"  : "find examples/canopy -name '*.peg' -exec ./bin/canopy {} \\;"
                      , "pegjs"   : "find examples/pegjs -name '*.peg' -exec pegjs --cache {} \\;"
                      , "test"    : "node spec/console.js"}

, "bugs"            : {"url": "http://github.com/jcoglan/canopy/issues"}

, "license"         : { "type"  : "MIT"
                      , "url"   : "http://www.opensource.org/licenses/mit-license.php"
                      }

, "repository"      : { "type"  : "git"
                      , "url"   : "git://github.com/jcoglan/canopy.git"
                      }

, "wake": {
    "javascript": {
      "sourceDirectory": "source",
      "targetDirectory": "lib",
      "builds": {
        "src": {"digest": false, "minify": false},
        "min": {"digest": false, "minify": true, "tag": "suffix", "sourceMap": "src"}
      },
      "targets": {
        "canopy": [ "canopy.js",
                    "canopy/meta_grammar",
                    "canopy/builders/javascript",
                    "canopy/compiler.js",
                    "canopy/compiler/grammar",
                    "canopy/compiler/grammar_rule",
                    "canopy/compiler/choice",
                    "canopy/compiler/choice_part",
                    "canopy/compiler/any_char",
                    "canopy/compiler/char_class",
                    "canopy/compiler/string",
                    "canopy/compiler/ci_string",
                    "canopy/compiler/predicate",
                    "canopy/compiler/repeat",
                    "canopy/compiler/sequence",
                    "canopy/compiler/sequence_part",
                    "canopy/compiler/reference",
                    "bindings" ]
      }
    }
  }
}
