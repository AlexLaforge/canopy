:textile
  h2. Matching strings

  The most basic type of node in PEG grammars is the literal string match. This
  grammar will only match the string @"I like parsers"@ and nothing else.

  <h6>parsers.peg</h6>
  <pre>grammar Parsers
    root  <-  "I like parsers"</pre>

  Strings are delimited with double quotes. A string node is a _terminal_ - it
  has no child nodes.

  <pre>require('./parsers').parse('I like parsers')
  // -> { textValue: 'I like parsers',
          offset: 0,
          elements: [] }

  require('./parsers').parse('this is not valid')
  Error: Line 1: expected "I like parsers"
  this is not valid
  ^

  require('./parsers').parse('I like PARSERS')
  Error: Line 1: expected "I like parsers"
  I like PARSERS
  ^</pre>

  As you can see from the last example, strings are case-sensitive. You can
  create case-insensitive strings by quoting the string with backticks:

  <h6>parsers.peg</h6>
  <pre>grammar Parsers
    root  <-  `I like parsers`</pre>

  It will then match any casing of the input:

  <pre>require('./parsers').parse('I like PARSERS')
  // -> { textValue: 'I like PARSERS',
          offset: 0,
          elements: [] }</pre>
